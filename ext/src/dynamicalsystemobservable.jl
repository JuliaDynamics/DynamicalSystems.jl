
"""
    DynamicalSystemObservable

Struct containing a reference to a `ParallelDynamicalSystem`, as well as various observables
that keep track of the system state(s) and the parameters. The observables are linked
with the panel generated by `interactive_trajectory` and allow setting up custom
animations and/or interactive applications. See [`interactive_trajectory`(@ref) for more.
"""
struct DynamicalSystemObservable
    pds::ParallelDynamicalSystem # reference to the dynamical system
    state_observable::Observable
    tail_observables::Vector{Observable}
    param_observable::Observable
    current_step::Observable{Int}
    Δt::Real # a default value for `step!`
end

# Extension of DynamicalSystems API

function DynamicalSystems.step!(dso::DynamicalSystemObservable, n::Int = 1)
    Δt = dso.Δt
    N = length(dso.tail_observables)
    # Always store values, but only update observables after loop
    for _ in 1:n
        step!(dso.pds, Δt, true)
        for i in 1:N
            ob = dso.tail_observables[i]
            last_state = current_state(dso.pds, i)
            # Use copy to ensure each entry in the circular buffer is unique!
            push!(ob[], copy(last_state))
        end
    end
    dso.current_step.val = dso.current_step[] + n
    # Here the observables are updated with their current values
    notify.(dso.tail_observables)
    dso.state_observable[] = [x[][end] for x in dso.tail_observables]
    return nothing
end

function DynamicalSystems.set_state!(dso::DynamicalSystemObservable, u::AbstractArray, i::Int = 1)
    dso.current_step.val = 0
    set_state!(dso.pds, copy(u), i)
    val = dso.tail_observables[i][]
    for j in eachindex(val); val[j] = u; end
    notify(dso.tail_observables[i])
    dso.state_observable.val[i] = u
    notify(dso.state_observable)
    return nothing
end

function DynamicalSystems.set_parameter!(dso::DynamicalSystemObservable, index, value)
    # update actual dynamical system parameter
    set_parameter!(dso.pds, index, value)
    # update observable of parameters
    p = dso.param_observable[]
    set_parameter!(dso.pds, index, value, p)
    # dso.param_observable[][index] = value
    notify(dso.param_observable)
    return
end
